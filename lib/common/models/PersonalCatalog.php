<?php

namespace common\models;

use common\models\Product;
use common\models\Customers;
use yii\validators\CompareValidator;

/**
 * This is the model class for table "personal_catalog".
 * @property integer $customers_id
 * @property string $uprid
 * @property integer $products_id
 * @property integer $created_at
 * @property integer $add_flag
 * @property integer $qty
 */
class PersonalCatalog extends \yii\db\ActiveRecord{
    public $date_create;

    public static function tableName() {
        return 'personal_catalog';
    }
    /**
     * @inheritdoc
     */
    public function rules() {
        return [
            [['uprid', 'customers_id','products_id','add_flag'], 'required'],
            [['customers_id','products_id','created_at','add_flag', 'qty'], 'integer'],
            [['uprid'], 'string', 'max' => 255],
            [['uprid', 'customers_id'], 'unique', 'targetAttribute' => ['uprid', 'customers_id']],
        ];
    }
    /**
     * @inheritdoc
     */
    public function attributeLabels() {
        return [
            'uprid' => 'Uprid Product',
            'customers_id' => 'ID Customer',
            'products_id' => 'ID Product',
            'created_at' => 'Date Create',
            'add_flag' => 'Flag (manually or cart)',
            'qty' => 'Qty'
        ];
    }
    public function getProducts()
    {
        return $this->hasOne(Products::class, ['products_id' => 'products_id']);
    }
    public function getProductsDescriptions()
    {
        return $this->hasOne(ProductsDescription::class, ['products_id' => 'products_id'])
                    ->viaTable('products', ['products_id' => 'products_id',]);
    }
    
    public function getList(){
        return $this->hasOne(PersonalCatalogList::class, ['list_id' => 'list_id']);
    }
    
    public function getCustomers()
    {
        return $this->hasOne(Customers::class, ['customers_id' => 'customers_id']);
    }

/**
 *
 * @param type $products_id
 * @param int $qty
 * @return \self
 * @throws \DomainException
 */
    public static function create($products_id, int $qty = 1): self
    {
        if((int)$products_id < 1 ){
            throw new \DomainException("wrong input data \$products_id $products_id");
        }
        $model = new self();
        $model->uprid = $products_id;
        $model->created_at = time();
        $model->products_id = (int)$products_id;
        $model->qty = $qty;
        return $model;
    }

    public function afterFind()
    {
        $this->date_create = date('Y-m-d H:i:s',$this->created_at);
        parent::afterFind(); // TODO: Change the autogenerated stub
    }
    
    public function connectToList(PersonalCatalogList $list){
        $this->link('list', $list);
        return $this->list_id;
    }
}
